drop table IF EXISTS film_genres;
drop table IF EXISTS film_directors;
drop table IF EXISTS friends;
drop table IF EXISTS likes;
drop table IF EXISTS genres;
drop table if exists reviews_likes;
drop table if exists reviews;
drop table IF EXISTS users;
drop table IF EXISTS films;
drop table IF EXISTS rating_mpa;
drop table IF EXISTS directors;

create TABLE IF NOT EXISTS genres (
    genre_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre VARCHAR(255) NOT NULL
);

create TABLE IF NOT EXISTS mpa_rating (
    rating_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    rating VARCHAR(255) NOT NULL
);

create TABLE IF NOT EXISTS films (
    film_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(200) NOT NULL,
    release_date TIMESTAMP NOT NULL,
    duration INT NOT NULL,
    mpa_rating_id INT REFERENCES mpa_rating(rating_id) ON delete CASCADE ON update CASCADE
);

create TABLE IF NOT EXISTS users (
    user_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login VARCHAR(255) NOT NULL,
    name VARCHAR(255),
    email VARCHAR(255) NOT NULL,
    birthday DATE
);

create TABLE IF NOT EXISTS film_genres (
    film_id INT NOT NULL REFERENCES films (film_id) ON delete CASCADE ON update CASCADE,
    genre_id INT NOT NULL REFERENCES genres (genre_id) ON delete CASCADE ON update CASCADE
);

create TABLE IF NOT EXISTS likes (
    film_id INT NOT NULL REFERENCES films (film_id) ON delete CASCADE ON update CASCADE,
    user_id INT NOT NULL REFERENCES users (user_id) ON delete CASCADE ON update CASCADE
);

create TABLE IF NOT EXISTS friends (
    user_id INT NOT NULL REFERENCES users (user_id) ON delete CASCADE ON update CASCADE,
    friend_id INT NOT NULL REFERENCES users (user_id) ON delete CASCADE ON update CASCADE,
    status BOOLEAN NOT NULL
);
create TABLE IF NOT EXISTS directors (
    director_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

create TABLE IF NOT EXISTS film_directors (
    film_id INT NOT NULL REFERENCES films (film_id) ON delete CASCADE ON update CASCADE,
    director_id INT NOT NULL REFERENCES directors (director_id) ON delete CASCADE ON update CASCADE
);

create TABLE if not exists reviews (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	film_id int4 NOT NULL,
	user_id int4 NOT NULL,
	content varchar NULL,
	is_positive bool NOT NULL,
	CONSTRAINT reviews_pk PRIMARY KEY (id),
	CONSTRAINT reviews_fk FOREIGN KEY (film_id) REFERENCES films(film_id) ON delete CASCADE,
	CONSTRAINT reviews_fk_1 FOREIGN KEY (user_id) REFERENCES users(user_id) ON delete CASCADE
);

create TABLE if not exists reviews_likes (
	review_id int4 NOT NULL,
	user_id int4 NOT NULL,
	grade int4 NULL,
	CONSTRAINT reviews_likes_fk FOREIGN KEY (review_id) REFERENCES reviews(id) ON delete CASCADE,
	CONSTRAINT reviews_likes_fk_1 FOREIGN KEY (user_id) REFERENCES users(user_id) ON delete CASCADE
);